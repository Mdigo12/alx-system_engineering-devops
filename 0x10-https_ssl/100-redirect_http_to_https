global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon
        # This affects how many concurrent connections HAProxy will allow.
        maxconn 2048
        # maximum size of temporary DHE keys that are generated
        tune.ssl.default-dh-param 2048

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES 128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        # forwardfor option sets HAProxy to add X-Forwarded-For headers to each request
        option forwardfor
        # reduces latency between HAProxy and your users by closing connections but maintaining keep-alives
        option http-server-close
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend thebee.tech-frontend-http
        bind *:80
        mode http
	redirect scheme https code 301 if !{ ssl_fc }
        http-request add-header X-Forwarded-Proto "http"
        default_backend thebee.tech-backend
frontend thebee.tech-frontend-https
        bind *:443 ssl crt /etc/haproxy/certs/www.thebee.tech.pem
        http-request add-header X-Forwarded-Proto "https"
        acl letsencrypt-acl path_beg /.well-known/acme-challenge/
        use_backend letsencrypt-backend if letsencrypt-acl
        default_backend thebee.tech-backend
backend thebee.tech-backend
        redirect scheme https if !{ ssl_fc }
        balance roundrobin
        server 56457-web-01 100.25.165.1:80 check
        server 56457-web-02 54.242.204.50:80 check
# This backend, which only handles Let’s Encrypt ACME challenges that are used for certificate requests and renewals, sends traffic to the localhost on port 54321. We’ll use this port instead of 80 and 443 when we renew our Let’s Encrypt SSL certificate.

backend letsencrypt-backend
        server letsencrypt 127.0.0.1:54321
